<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddInButton" xml:space="preserve">
    <value>Mover Usuario a Rol</value>
  </data>
  <data name="AddNewRoleButton" xml:space="preserve">
    <value>&lt;i class='fa fa-plus'&gt;&lt;/i&gt; Adicionar Nuevo Rol</value>
  </data>
  <data name="AddNewUserButton" xml:space="preserve">
    <value>&lt;i class="fa fa-plus"&gt;&lt;/i&gt; Adicionar Nuevo Usuario</value>
  </data>
  <data name="AddOutButton" xml:space="preserve">
    <value>Mover Usuario fuera del Rol</value>
  </data>
  <data name="AllRolesItem" xml:space="preserve">
    <value>Todos</value>
  </data>
  <data name="ChangePermissionLabel" xml:space="preserve">
    <value>Cambiar permisos para el Rol:</value>
  </data>
  <data name="ChangePermissionUserLabel" xml:space="preserve">
    <value>Cambiar permisos para el Usuario:</value>
  </data>
  <data name="ConfirmDeleteRol" xml:space="preserve">
    <value>return confirm('¿Esta seguro de eliminar el rol?')</value>
  </data>
  <data name="DeleteRolButton" xml:space="preserve">
    <value>Eliminar Rol</value>
  </data>
  <data name="DescriptionColumn" xml:space="preserve">
    <value>Descripción del permiso</value>
  </data>
  <data name="MessageDeletedRole" xml:space="preserve">
    <value>El Rol {0} ha sido eliminado.</value>
  </data>
  <data name="MessageDeletedRoleUser" xml:space="preserve">
    <value>El Usuario {0} ha sido eliminado del Rol {1}.</value>
  </data>
  <data name="MessageErrorDeletedRole" xml:space="preserve">
    <value>No es posible eliminar el Rol {0} porque tiene usuarios asignados.</value>
  </data>
  <data name="MessageErrorDeleteRoleUser" xml:space="preserve">
    <value>Ocurrió un error al eliminar el usuario {0}  del rol  {1}.</value>
  </data>
  <data name="MessageErrorGetPermissions" xml:space="preserve">
    <value>Ocurrió un error al obtener el listado de permisos.</value>
  </data>
  <data name="MessageErrorGetPermissionsUser" xml:space="preserve">
    <value>Ocurrió un error al obtener el listado de permisos del usuario.</value>
  </data>
  <data name="MessageErrorGetRoles" xml:space="preserve">
    <value>Ocurrió un error al obtener el listado de Roles.</value>
  </data>
  <data name="MessageErrorGetUsersByRole" xml:space="preserve">
    <value>Ocurrió un error al obtener el listado de usuarios del rol </value>
  </data>
  <data name="MessageErrorRegisterPermissionsToRol" xml:space="preserve">
    <value>Ocurrió un error al registrar los permisos para el rol.</value>
  </data>
  <data name="MessageErrorRegisterPermissionsToUser" xml:space="preserve">
    <value>Ocurrió un error al registrar los permisos para el usuario {0}.</value>
  </data>
  <data name="MessageNoUsersInList" xml:space="preserve">
    <value>No se tienen usuarios en el listado.</value>
  </data>
  <data name="MessageRegisterPermissionsToRol" xml:space="preserve">
    <value>Se registró correctamente los permisos para el rol.</value>
  </data>
  <data name="MessageRegisterPermissionsToUser" xml:space="preserve">
    <value>Los permisos para el usuario {0} fueron registrados correctamente.</value>
  </data>
  <data name="MessageUserRegisteredInRole" xml:space="preserve">
    <value>El Usuario {0} ha sido adicionado al Rol {1}.</value>
  </data>
  <data name="MessageUsersNoSelected" xml:space="preserve">
    <value>No se tiene usuarios seleccionados en la lista.</value>
  </data>
  <data name="MessageWarningDeleteAdministrativeUser" xml:space="preserve">
    <value>No se puede eliminar el Usuario {0} del rol {1} porque es el último con privilegios administrativos.</value>
  </data>
  <data name="MessageWarningDeleteAdminUser" xml:space="preserve">
    <value>No se puede eliminar el Usuario {0} del Rol {1} porque es el útimo grupo con privilegios de administración y es el Administrador del Sistema.</value>
  </data>
  <data name="NoneRoleItem" xml:space="preserve">
    <value>Ninguno</value>
  </data>
  <data name="PageTitlePermissionRole" xml:space="preserve">
    <value>Definir permisos a Roles</value>
  </data>
  <data name="PageTitlePermissionUser" xml:space="preserve">
    <value>Definir permisos a Usuarios</value>
  </data>
  <data name="PageTitleRoles" xml:space="preserve">
    <value>Asignar Roles</value>
  </data>
  <data name="PageTitleUserRoles" xml:space="preserve">
    <value>Asignar Roles por Usuario</value>
  </data>
  <data name="ResetPermissionsButton" xml:space="preserve">
    <value>&lt;i class='fa fa-refresh'&gt;&lt;/i&gt; Resetear permisos</value>
  </data>
  <data name="ResetRolesButton" xml:space="preserve">
    <value>&lt;i class="fa fa-refresh"&gt;&lt;/i&gt; Resetar los Roles del usuario</value>
  </data>
  <data name="RoleColumn" xml:space="preserve">
    <value>Rol</value>
  </data>
  <data name="RoleLabel" xml:space="preserve">
    <value>Rol:</value>
  </data>
  <data name="RolesLabel" xml:space="preserve">
    <value>Roles para el Usuario</value>
  </data>
  <data name="SavePermissionsButton" xml:space="preserve">
    <value>&lt;i class='fa fa-floppy-o'&gt;&lt;/i&gt; Grabar permisos</value>
  </data>
  <data name="SaveRolesButton" xml:space="preserve">
    <value>&lt;i class='fa fa-floppy-o'&gt;&lt;/i&gt; Grabar los Roles del Usuario</value>
  </data>
  <data name="SearchUserButton" xml:space="preserve">
    <value>&lt;i class='fa fa-search'&gt;&lt;/i&gt; Buscar Usuarios</value>
  </data>
  <data name="SelectAllButton" xml:space="preserve">
    <value>&lt;i class='fa fa-caret-down'&gt;&lt;/i&gt; Seleccionar Todo</value>
  </data>
  <data name="SelectColumn" xml:space="preserve">
    <value>Seleccionar</value>
  </data>
  <data name="SelectUserLabel" xml:space="preserve">
    <value>Debe seleccionar un usuario.</value>
  </data>
  <data name="TitleUserLabel" xml:space="preserve">
    <value>Información del Usuario seleccionado</value>
  </data>
  <data name="UsersInLabel" xml:space="preserve">
    <value>Usuarios en el Rol</value>
  </data>
  <data name="UsersNotInLabel" xml:space="preserve">
    <value>Usuarios no en el Rol</value>
  </data>
</root>