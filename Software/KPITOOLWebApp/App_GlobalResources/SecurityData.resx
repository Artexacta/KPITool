<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddInButton" xml:space="preserve">
    <value>Move User to Role</value>
  </data>
  <data name="AddNewRoleButton" xml:space="preserve">
    <value>&lt;i class='fa fa-plus'&gt;&lt;/i&gt; Add New Role</value>
  </data>
  <data name="AddNewUserButton" xml:space="preserve">
    <value>&lt;i class="fa fa-plus"&gt;&lt;/i&gt; Add New User</value>
  </data>
  <data name="AddOutButton" xml:space="preserve">
    <value>Move User outside the role</value>
  </data>
  <data name="AllRolesItem" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="ChangePermissionLabel" xml:space="preserve">
    <value>Change permissions for the Role:</value>
  </data>
  <data name="ChangePermissionUserLabel" xml:space="preserve">
    <value>Change permissions for the User:</value>
  </data>
  <data name="ConfirmDeleteRol" xml:space="preserve">
    <value>return confirm('Are you sure to delete the role?')</value>
  </data>
  <data name="DeleteRolButton" xml:space="preserve">
    <value>Delete Rol</value>
  </data>
  <data name="DescriptionColumn" xml:space="preserve">
    <value>Permission description</value>
  </data>
  <data name="MessageDeletedRole" xml:space="preserve">
    <value>The Role {0} has been deleted.</value>
  </data>
  <data name="MessageDeletedRoleUser" xml:space="preserve">
    <value>The user {0} has been deleted from the role  {1}.</value>
  </data>
  <data name="MessageErrorDeletedRole" xml:space="preserve">
    <value>You can not remove the Role {0} because it has assigned users.</value>
  </data>
  <data name="MessageErrorDeleteRoleUser" xml:space="preserve">
    <value>Error to delete the user {0}  from the role  {1}.</value>
  </data>
  <data name="MessageErrorGetPermissions" xml:space="preserve">
    <value>Error to obtain the Permissions list.</value>
  </data>
  <data name="MessageErrorGetPermissionsUser" xml:space="preserve">
    <value>Error to obtain the permissions list by the user.</value>
  </data>
  <data name="MessageErrorGetRoles" xml:space="preserve">
    <value>Error to obtain the Roles list.</value>
  </data>
  <data name="MessageErrorGetUsersByRole" xml:space="preserve">
    <value>Error to obtain the user list by role </value>
  </data>
  <data name="MessageErrorRegisterPermissionsToRol" xml:space="preserve">
    <value>Error to register permissions to the role.</value>
  </data>
  <data name="MessageErrorRegisterPermissionsToUser" xml:space="preserve">
    <value>Error to register permissions to the user {0}.</value>
  </data>
  <data name="MessageNoUsersInList" xml:space="preserve">
    <value>There are no users in the list.</value>
  </data>
  <data name="MessageRegisterPermissionsToRol" xml:space="preserve">
    <value>The permissions for the rol were successfully registered.</value>
  </data>
  <data name="MessageRegisterPermissionsToUser" xml:space="preserve">
    <value>The permissions for the user {0} were successfully registered.</value>
  </data>
  <data name="MessageUserRegisteredInRole" xml:space="preserve">
    <value>The user {0} has been added to role {1}.</value>
  </data>
  <data name="MessageUsersNoSelected" xml:space="preserve">
    <value>There are no selected users in the list.</value>
  </data>
  <data name="MessageWarningDeleteAdministrativeUser" xml:space="preserve">
    <value>The user {0} can not be deleted from the role {1} because it is the last with administrative privileges.</value>
  </data>
  <data name="MessageWarningDeleteAdminUser" xml:space="preserve">
    <value>The user {0} can not be deleted from the role {1} because it is the last with administrative privileges and it is the system administrator.</value>
  </data>
  <data name="NoneRoleItem" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="PageTitlePermissionRole" xml:space="preserve">
    <value>Permissions for Roles</value>
  </data>
  <data name="PageTitlePermissionUser" xml:space="preserve">
    <value>Permissions for Users</value>
  </data>
  <data name="PageTitleRoles" xml:space="preserve">
    <value>Assign Roles</value>
  </data>
  <data name="PageTitleUserRoles" xml:space="preserve">
    <value>Assign Roles by User</value>
  </data>
  <data name="ResetPermissionsButton" xml:space="preserve">
    <value>&lt;i class='fa fa-refresh'&gt;&lt;/i&gt; Reset permissions</value>
  </data>
  <data name="ResetRolesButton" xml:space="preserve">
    <value>&lt;i class="fa fa-refresh"&gt;&lt;/i&gt; Reset User Roles</value>
  </data>
  <data name="RoleColumn" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="RoleLabel" xml:space="preserve">
    <value>Role:</value>
  </data>
  <data name="RolesLabel" xml:space="preserve">
    <value>Roles for the User</value>
  </data>
  <data name="SavePermissionsButton" xml:space="preserve">
    <value>&lt;i class='fa fa-floppy-o'&gt;&lt;/i&gt; Save permissions</value>
  </data>
  <data name="SaveRolesButton" xml:space="preserve">
    <value>&lt;i class='fa fa-floppy-o'&gt;&lt;/i&gt; Record User Roles</value>
  </data>
  <data name="SearchUserButton" xml:space="preserve">
    <value>&lt;i class='fa fa-search'&gt;&lt;/i&gt; Search Users</value>
  </data>
  <data name="SelectAllButton" xml:space="preserve">
    <value>&lt;i class='fa fa-caret-down'&gt;&lt;/i&gt; Select All</value>
  </data>
  <data name="SelectColumn" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectUserLabel" xml:space="preserve">
    <value>You must select an user.</value>
  </data>
  <data name="TitleUserLabel" xml:space="preserve">
    <value>Information of the user selected</value>
  </data>
  <data name="UsersInLabel" xml:space="preserve">
    <value>Users in Role</value>
  </data>
  <data name="UsersNotInLabel" xml:space="preserve">
    <value>Users not in the Role</value>
  </data>
</root>