<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelButton" xml:space="preserve">
    <value>&lt;i class='fa fa-times'&gt;&lt;/i&gt; Cancelar</value>
  </data>
  <data name="ConfirmDeleteCategory" xml:space="preserve">
    <value>return confirm('¿Está seguro de eliminar la categoría?')</value>
  </data>
  <data name="ConfirmDeleteItem" xml:space="preserve">
    <value>return confirm('¿Está seguro de eliminar el item?')</value>
  </data>
  <data name="DeleteColumn" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="EditColumn" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="ExistsIDCustomValidator" xml:space="preserve">
    <value>El ID ya está registrado.</value>
  </data>
  <data name="IdRequiredFieldValidator" xml:space="preserve">
    <value>Ingrese el ID.</value>
  </data>
  <data name="ItemsColumn" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="MessageCreatedCategory" xml:space="preserve">
    <value>Se registró correctamente la categoría.</value>
  </data>
  <data name="MessageCreatedItem" xml:space="preserve">
    <value>Se registró correctamente el ítem.</value>
  </data>
  <data name="MessageDeletedCategory" xml:space="preserve">
    <value>Se eliminó correctamente la categoría.</value>
  </data>
  <data name="MessageDeletedItem" xml:space="preserve">
    <value>Se eliminó correctamente el ítem.</value>
  </data>
  <data name="MessageEmptyCategoryId" xml:space="preserve">
    <value>El ID de la categoría no puede ser vacío o nulo.</value>
  </data>
  <data name="MessageEmptyItemId" xml:space="preserve">
    <value>El ID del ítem no puede ser vacío o nulo.</value>
  </data>
  <data name="MessageEmptyNameCategory" xml:space="preserve">
    <value>El nombre de la categoría no puede ser vacío o nulo.</value>
  </data>
  <data name="MessageEmptyNameItem" xml:space="preserve">
    <value>El nombre del ítem no puede ser vacío o nulo.</value>
  </data>
  <data name="MessageErrorCreateCategory" xml:space="preserve">
    <value>Ocurrío un error al registrar la categoría.</value>
  </data>
  <data name="MessageErrorCreateItem" xml:space="preserve">
    <value>Ocurrío un error al registrar el ítem.</value>
  </data>
  <data name="MessageErrorDeleteCategory" xml:space="preserve">
    <value>Ocurrió un error al eliminar la categoría.</value>
  </data>
  <data name="MessageErrorGetCategories" xml:space="preserve">
    <value>Ocurrió un error al obtener el listado de categorías registradas.</value>
  </data>
  <data name="MessageErrorGetCategoriesByKpi" xml:space="preserve">
    <value>Ocurrió un error al obtener el listado de categorías del KPI.</value>
  </data>
  <data name="MessageErrorGetCategory" xml:space="preserve">
    <value>Ocurrió un error al obtener la información de la categoría.</value>
  </data>
  <data name="MessageErrorGetItem" xml:space="preserve">
    <value>Ocurrió un error al obtener la información del ítem.</value>
  </data>
  <data name="MessageErrorGetItemsByCategory" xml:space="preserve">
    <value>Error al obtener el listado de ítems de la categoría.</value>
  </data>
  <data name="MessageErrorUpdateCategory" xml:space="preserve">
    <value>Ocurrió un error al actualizar la categoría.</value>
  </data>
  <data name="MessageErrorUpdateItem" xml:space="preserve">
    <value>Ocurrió un error al actualizar el ítem.</value>
  </data>
  <data name="MessageUpdatedCategory" xml:space="preserve">
    <value>Se actualizó correctamente la categoría.</value>
  </data>
  <data name="MessageUpdatedItem" xml:space="preserve">
    <value>Se actualizó correctamente el ítem.</value>
  </data>
  <data name="NameColumn" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="NameLabel" xml:space="preserve">
    <value>Nombre:</value>
  </data>
  <data name="NameRequiredFieldValidator" xml:space="preserve">
    <value>Ingrese el nombre.</value>
  </data>
  <data name="NewButton" xml:space="preserve">
    <value>&lt;i class='fa fa-plus'&gt;&lt;/i&gt; Nueva Categoría</value>
  </data>
  <data name="NewItemButton" xml:space="preserve">
    <value>&lt;i class='fa fa-plus'&gt;&lt;/i&gt; Nuevo Item</value>
  </data>
  <data name="NoDataItemRows" xml:space="preserve">
    <value>No se tienen items registrados</value>
  </data>
  <data name="NoDataRows" xml:space="preserve">
    <value>No se tienen categorías registradas</value>
  </data>
  <data name="PageDetailsTitle" xml:space="preserve">
    <value>Detalles de la Categoría</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Categorías</value>
  </data>
  <data name="RegularExpressionValidator" xml:space="preserve">
    <value>Caracteres inválidos.</value>
  </data>
  <data name="ReturnButton" xml:space="preserve">
    <value>Regresar al listado de Categorías</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>&lt;i class='fa fa-plus'&gt;&lt;/i&gt; Guardar</value>
  </data>
  <data name="TitleDetailsLabel" xml:space="preserve">
    <value>Lista de Items para la categoría {0} - {1}</value>
  </data>
  <data name="TitleLabel" xml:space="preserve">
    <value>Lista de Categorías</value>
  </data>
</root>