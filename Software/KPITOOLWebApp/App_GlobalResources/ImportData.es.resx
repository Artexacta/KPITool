<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="CategoryColumn" xml:space="preserve">
    <value>Categoría</value>
  </data>
  <data name="DateColumn" xml:space="preserve">
    <value>Fecha</value>
  </data>
  <data name="DecimalDataDescription" xml:space="preserve">
    <value>&lt;p&gt;Para cargar los datos de un archivo Excel se deben tener al menos dos columnas de nombres "Fecha" y "Valor". Los valores deben ser sólo de tipo decimal de hasta tres decimales.&lt;/p&gt;</value>
  </data>
  <data name="DeleteColumn" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="DeletedData" xml:space="preserve">
    <value>Los datos fueron eliminados.</value>
  </data>
  <data name="EmptyFile" xml:space="preserve">
    <value>El archivo está vacío.</value>
  </data>
  <data name="EnterDataButton" xml:space="preserve">
    <value>Introducir los valores manualmente</value>
  </data>
  <data name="EnterDataText" xml:space="preserve">
    <value>Cuando existen valores para la fecha indicada:</value>
  </data>
  <data name="ErrorDataInFile" xml:space="preserve">
    <value>Error en la fila: {0}, la combinación de elementos '{1}' no existe para el KPI.</value>
  </data>
  <data name="ErrorsInFile" xml:space="preserve">
    <value>Se han encontrado los siguientes errores al leer el archivo '{0}':</value>
  </data>
  <data name="ErrorToObtainData" xml:space="preserve">
    <value>Se produjo un error al leer los datos a guardar.</value>
  </data>
  <data name="FileUploadRequired" xml:space="preserve">
    <value>Debe seleccionar un archivo.</value>
  </data>
  <data name="IntegerDataDescription" xml:space="preserve">
    <value>&lt;p&gt;Para cargar los datos de un archivo Excel se deben tener al menos dos columnas de nombres "Fecha" y "Valor". Los valores deben ser sólo números enteros.&lt;/p&gt;</value>
  </data>
  <data name="InvalidaFile" xml:space="preserve">
    <value>Archivo inválido. Por favor, seleccione un archivo con la extensión </value>
  </data>
  <data name="KPITypeLabel" xml:space="preserve">
    <value>Tipo KPI:</value>
  </data>
  <data name="lblEmptyData" xml:space="preserve">
    <value>No existen datos para registrar</value>
  </data>
  <data name="NoDataInFile" xml:space="preserve">
    <value>El archivo no tiene datos para registrar.</value>
  </data>
  <data name="NoDataInSession" xml:space="preserve">
    <value>No se tienen los datos en sesión.</value>
  </data>
  <data name="NoDataRows" xml:space="preserve">
    <value>No hay mediciones registradas para este KPI.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Ingreso de datos para KPI </value>
  </data>
  <data name="RegisteredData" xml:space="preserve">
    <value>Se registraron los datos.</value>
  </data>
  <data name="ReportingPeriodLabel" xml:space="preserve">
    <value>Periodo de reporte:</value>
  </data>
  <data name="ReportValueLabel" xml:space="preserve">
    <value>Reportar el nuevo valor:</value>
  </data>
  <data name="RequiereDateValue" xml:space="preserve">
    <value>Debe introducir la fecha.</value>
  </data>
  <data name="RequiereTimeSelected" xml:space="preserve">
    <value>"Debe seleccionar un tiempo para al menos uno de los datos."</value>
  </data>
  <data name="RequiredLabel" xml:space="preserve">
    <value>Requerido</value>
  </data>
  <data name="RequireValueEntered" xml:space="preserve">
    <value>"Debe introducir un valor para al menos uno de los datos."</value>
  </data>
  <data name="ReturnLink" xml:space="preserve">
    <value>Regresar al listado de KPIs</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Insertar nuevo valor</value>
  </data>
  <data name="SaveUploadDataButton" xml:space="preserve">
    <value>Guardar los datos cargados</value>
  </data>
  <data name="StartingDateLabel" xml:space="preserve">
    <value>Fecha de inicio:</value>
  </data>
  <data name="TimeDataDescription" xml:space="preserve">
    <value>&lt;p&gt;Para cargar los datos de un archivo Excel se deben tener al menos dos columnas de nombres "Fecha" y "Valor". Los valores son lapsos de tiempo y deben estar en formato ISO8601: las duraciones de tiempo son representadas por el formato P[n]Y[n]M[n]DT[n]H[n]M[n]. En esta representación [n] es reemplazada por el valor de cada elemento de tiempo que sigue después de [n]. No se requieren ceros a la izquierda.&lt;br /&gt;Ejemplo: P1Y2M10DT2H30M (1 año, 2 meses, 10 días, 2 horas y 30 minutos).&lt;/p&gt;</value>
  </data>
  <data name="TypeUploadItemAdd" xml:space="preserve">
    <value>Añadir un nuevo valor al antiguo</value>
  </data>
  <data name="TypeUploadItemReplace" xml:space="preserve">
    <value>Reemplazar valor antiguo por uno nuevo</value>
  </data>
  <data name="UploadDataButton" xml:space="preserve">
    <value>Cargar datos</value>
  </data>
  <data name="UploadDataLabel" xml:space="preserve">
    <value>Los siguientes datos van a ser registrados:</value>
  </data>
  <data name="UploadDataText" xml:space="preserve">
    <value>Cuando existen valores para las fechas especificadas en el archivo de Excel:</value>
  </data>
  <data name="UploadFileButton" xml:space="preserve">
    <value>Cargar valores de un archivo de Excel</value>
  </data>
  <data name="ValueColumn" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="ValueDateLabel" xml:space="preserve">
    <value>Fecha:</value>
  </data>
  <data name="ValueRequireDecimalData" xml:space="preserve">
    <value>"El valor debe ser decimal de hasta tres decimales."</value>
  </data>
  <data name="ValueRequireIntegerData" xml:space="preserve">
    <value>"El valor debe ser un entero."</value>
  </data>
  <data name="VerifiyDataFail" xml:space="preserve">
    <value>"No se pudo verificar si ya existe un registro con los mismos datos."</value>
  </data>
  <data name="ValueRequirePercentData" xml:space="preserve">
    <value>"El valor debe ser un número entre 1 y 100"</value>
  </data>
  <data name="DeleteMeasurementError" xml:space="preserve">
    <value>Ocurrió un error al eliminar la medición.</value>
  </data>
  <data name="GetKPIMeasurements" xml:space="preserve">
    <value>Ocurrió un error al obtener el listado de mediciones registradas.</value>
  </data>
  <data name="ImageAlert" xml:space="preserve">
    <value>Los datos ya existen</value>
  </data>
  <data name="InsertMeasurementError" xml:space="preserve">
    <value>Ocurrió un error, la información no se registró.</value>
  </data>
  <data name="ZeroKpiId" xml:space="preserve">
    <value>El ID del KPI no puede ser cero.</value>
  </data>
  <data name="ZeroMeasurementId" xml:space="preserve">
    <value>El ID de la medición no puede ser cero.</value>
  </data>
  <data name="ConfirmDeleteMeasurement" xml:space="preserve">
    <value>return confirm('¿Está seguro de eliminar la medición?')</value>
  </data>
</root>